
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import os
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, BooleanVar, IntVar, Checkbutton, Label
from PIL import Image, ImageTk


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"/Users/hongtaegsu/Downloads/build/assets/frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("350x322")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 322,
    width = 350,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    175.0,
    161.0,
    image=image_image_1
)

canvas.create_text(
    85.0,
    31.0,
    anchor="nw",
    text="DISABLE HIP TRACKER",
    fill="#FFFFFF",
    font=("Roboto Medium", 14 * -1)
)

canvas.create_text(
    85.0,
    87.0,
    anchor="nw",
    text="DEV: SPAWN TRAKER FOR HANDS",
    fill="#FFFFFF",
    font=("Roboto Medium", 14 * -1)
)

canvas.create_text(
    85.0,
    143.0,
    anchor="nw",
    text="DEV: PREVIEW SKELETON IN VR",
    fill="#FFFFFF",
    font=("Roboto Medium", 14 * -1)
)

canvas.create_text(
    34.0,
    206.0,
    anchor="nw",
    text="steam VR",
    fill="#FFFFFF",
    font=("Inter", 16 * -1)
)

canvas.create_text(
    185.0,
    207.0,
    anchor="nw",
    text="VRchatOSC",
    fill="#FFFFFF",
    font=("Inter", 16 * -1)
)

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat"
)
button_1.place(
    x=32.0,
    y=262.0,
    width=287.0,
    height=40.0
)

##토글##
def create_toggle_switch(window, canvas, x, y, scale=0.65):
    # 토글 상태 변수 및 이미지 로드
    toggle_status = BooleanVar()
    toggle_status.set(False)

    original_on_image = Image.open(relative_to_assets("toggle_on.png"))
    original_off_image = Image.open(relative_to_assets("toggle_off.png"))

    # 이미지 크기 조절
    on_image_resized = original_on_image.resize((round(original_on_image.width * scale), round(original_on_image.height * scale)), Image.LANCZOS)
    off_image_resized = original_off_image.resize((round(original_off_image.width * scale), round(original_off_image.height * scale)), Image.LANCZOS)

    toggle_on_image = ImageTk.PhotoImage(on_image_resized)
    toggle_off_image = ImageTk.PhotoImage(off_image_resized)

    # 토글 이미지 생성 및 위치 설정
    toggle_switch = canvas.create_image(x, y, image=toggle_off_image, anchor="nw")

    # 토글 동작 함수
    def toggle_action(event):
        if toggle_status.get():
            canvas.itemconfigure(toggle_switch, image=toggle_off_image)
            toggle_status.set(False)
        else:
            canvas.itemconfigure(toggle_switch, image=toggle_on_image)
            toggle_status.set(True)

    canvas.tag_bind(toggle_switch, "<Button-1>", toggle_action)

    return toggle_switch


toggle_switch_1 = create_toggle_switch(window, canvas, x=32, y=28)
toggle_switch_2 = create_toggle_switch(window, canvas, x=32, y=83)
toggle_switch_3 = create_toggle_switch(window, canvas, x=32, y=138)
#####

##채크박스##
def create_image_check_box(window, canvas, on_image_path, off_image_path, x, y):
    check_status = False

    on_image = ImageTk.PhotoImage(Image.open(relative_to_assets(on_image_path)))
    off_image = ImageTk.PhotoImage(Image.open(relative_to_assets(off_image_path)))

    def toggle_image(event):
        nonlocal check_status
        check_status = not check_status
        if check_status:
            canvas.itemconfigure(check_button, image=on_image)
        else:
            canvas.itemconfigure(check_button, image=off_image)

    check_button = canvas.create_image(x, y, image=off_image, anchor="center")
    canvas.tag_bind(check_button, '<Button-1>', toggle_image)
    return check_button


check_box_steam_vr = create_image_check_box(window, canvas, "check_on.png", "check_off.png", 125, 215)
check_box_vrchat_osc = create_image_check_box(window, canvas, "check_on.png", "check_off.png", 295, 214)
#####

window.resizable(False, False)
window.mainloop()
